

1. Fetch the employees who are having same salary from each department.

select employees from employee group by salary ,department ;
 
2.
Year, revenue,diff
2022,5,5-4
2021,4,4-7
2020,7,7


Write the code to get the difference current year - minus previous year 
QA



3.
Customer_hist table 
Cid,created_dt, updated-dt
All 5 year's data
Customer_delta table 
Cid,created_dt, updated-dt
Only updated and newly added records
Fetch yesterday's  updated and newly added records using history and incremental table.
Write a code by comparing 2 tables



4.

create table emp(Eno int ,dno int);


insert into emp(Eno,dno) values(101,10),(102,10),(103,Null)


create table dept(Dno int, loc varchar(20));

insert into emp(Dno,loc) values(10,'hyd'),(Null,'hyd');

Dept table 
Dno, loc
10,hyd
Null,hyd
********

Emp table 
Eno,dno
101,10
102,10
103,Null


Select * from dept
Left join emp
On d.dno=e.dno


Write the output of the above query 

Dno, loc, eno
10,hyd ,101
Null,hyd,null


5. Write the below code in pyspark 
 Read data from 
employee table, department table
Join them by dept no.
Write them to new table which is partitioned by dept no and mode is overwrite .

df_join = employee.join(department) when employee.dept.no = department.dept.no

df_final = spark.write.mode('overwrite').partition('dept.no').saveAstable()


6. Check all the dept numbers in department table present in emp table or not. Write the optimized way.

select dept_Num from emp_table e
join department d
on e.dept_Num = d.dept_Num

7.  Generate surrogate key unique/sequence number without using row and rank functions in my pyspark
